# defaults
language: ruby
os:
- linux
dist: xenial

# for docker credentials storage
addons:
  apt:
    packages:
    - pass
    - rng-tools

# docker 18.06 doesn't contain experimental buildx, installing latest version
before_install:
  - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
  - sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
  - sudo apt-get update
  - sudo apt-get -y -o Dpkg::Options::="--force-confnew" install docker-ce

# travis encrypt --com PRIVATE_ENV="value" --add env.global
# Expected tag is v?.?-<name-of-image>_<image.tag>
env:
  global:
  - TAG="${TRAVIS_TAG%%-*}"
  - TMP="${TRAVIS_TAG#*-}"
  - IMAGE_TAG="${TMP#*_}"
  - IMAGE_PATH="${TMP%%_*}"
  - IMAGE_NAME=$(basename "$IMAGE_PATH")
  - IMAGE="$IMAGE_NAME:$IMAGE_TAG"
  - PLATFORMS=linux/amd64,linux/arm/v7,linux/arm64
  - secure: E6YE4Dlms80unD+xl3JtSyuErlE+em6OUd4aLkRTCkBsao4GN74l0CBuNcPlg12HXIFhlVE8tLFn2pHKftPTfq5DnxwT7x0xQX0m7eOK5tL/FzYFFRh/mtPbhbYICM2EIWjH+t//IXdUJpqvh84ZcIoK+2o6TKz5mdnHH48VsKKqp5rdu/tkGHYfc6CCpd+KouE/ynewh0dNeAzx3b5N4/F03rWEHu7+1mbCRO4h2uqZxbN1m0CGWS+OVq1R2/JeJYwCOYN7ysUiWQc6JY5oVH/M5FWYKXTQLUctxxkwCYOj/yukRDje6Y2Ix1b4p0rYbah8jAMDxUN0xKzx85eepID8z3sP8viWRfEcWLlOt2zRWj7I4pDrxcQK6QwcGvm+rLaMpwDjjzdQCkuTGbTDGZNBN6TndtCRSHOIZCEFhuis62GnTGYYlL0s3Gs3F0bg2qTpR0ldBe81v10lcbfjEa5Jktvj0+S8iCERtod2hiWBnOazKhKwF4/tlrXMR5YT2XZ/6CHqs8hVO3Ax8b7pHY38GljfKoKl3U4G8+4AS/v37au4OQFF8eXN0d2tRA5w+NeMJm918tdci60va2ZdDpYhbcYC7/tz1V31uXeDQNxzSuI11Jq8abKOfdUSUmT0JXqnXvWxnDwaM1fHpAB0dn2+UczrHAAjH0m3Cwnb8ek=
  - secure: GZHviyb2H7ptkgRe4ODJPwePAVv8/b9cJe++DSQi9G/J5ofG2zDd86+0c0PgzemgqL/8ynwpnuz2jdTJ5YCUlpxnIdO7geeq10AvN2Jc3TCqhs60f2wKZEzp2k8koxv6CV5xWWwvm1W6V4O3k9skkJhk10uYOdn1+TI+29x9/ZTILsjwXAlntIFkQhyag3ezqyqS8ZtswCk2UL3IGZX0GBBFFxLJI3CCR7CAszMsg6Yya4YzueHVZNEzaAZpmd2CH3j4Peq4XmmplYlvMrWnSKn6pbB5R0gJM0qIwAm5mOhlbGLSR1SKod8NT+h+yUWSH+I/s86DAFzz2BWkddQvuQZDKFM68fCPzMKl5h97/Ap2oDlE/rXRizGolHjZuk5//Za0YS6zIvnhoqHMewS3Esl1Kyvc8gqayIsY6ZZ6rABVw9xO9cJYmPhsRF5GvF3gT5IkNSCInTuJ3kETjgiYVC7wBqYFiDg/tnDxC1xhJUfenyGH3SjQ8wZ9WNievmuyBKNB66tmdqIgE7NjX7eSz1zpQe+QKJvQo2HjkRVM/yCQmoNxb3oy+psa3GvfubAPij4m8ov1supjFNsjzK2WHoIZkP5PXniYER4UxXXTVWeftn84F+VorHpcQuCd0YYIhWBe7G4eLo6Z2VuY+SVlY3B7ZAs5I2r1HsyNrWmGEFw=

jobs:
  include:
  - stage: build
    script:
    - echo "Image $IMAGE_NAME - Tag $IMAGE_TAG - Path $IMAGE_PATH"
    - docker build --build-arg TAG="$IMAGE_TAG" -t "$IMAGE" "$IMAGE_PATH"
    - docker images
    - docker save -o built_image.tar "$IMAGE"
    workspaces:
      create:
        name: ws1
        paths:
        - built_image.tar
  - stage: deploy
    script:
    - sh ci/docker-credentials-helper.sh
    - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
    - docker load -i built_image.tar
    - docker tag "$IMAGE" "$DOCKER_USERNAME/$IMAGE"
    - docker push "$DOCKER_USERNAME/$IMAGE"
    workspaces:
      use: ws1
  - stage: cross-build
    script:
    - sh ci/docker-credentials-helper.sh
      # server side
    - echo '{"experimental":true}' | sudo tee /etc/docker/daemon.json
      # client side
    - echo '{"experimental":"enabled"}' | sudo tee $HOME/.docker/config.json
    - docker -v
    - sudo systemctl restart docker
    - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
    - docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
    - docker buildx create --name xbuilder --use
    - docker buildx inspect --bootstrap
    - docker buildx build --progress plain --platform "$PLATFORMS" --build-arg TAG="$IMAGE_TAG" -t "$DOCKER_USERNAME/$IMAGE_NAME:$IMAGE_TAG" --push "$IMAGE_PATH"

stages:
- name: cross-build
  if: tag =~ /^.*(es-kuzzle|elasticsearch).*$/
- name: build
  if: (tag IS present) AND NOT (tag =~ /^.*(es-kuzzle|elasticsearch).*$/)
- name: deploy
  if: (tag IS present) AND NOT (tag =~ /^.*(es-kuzzle|elasticsearch).*$/)
